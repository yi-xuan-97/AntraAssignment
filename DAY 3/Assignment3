--List all cities that have both Employees and Customers.
SELECT DISTINCT City
FROM Employees
WHERE City IN (
    SELECT City
    FROM Customers
)

--List all cities that have Customers but no Employee.
--a.Use sub-query
SELECT DISTINCT City
FROM Customers
WHERE City NOT IN (
    SELECT City
    FROM Employees
)

--b.Do not use sub-query
SELECT DISTINCT C.City
FROM Customers C LEFT JOIN Employees E ON C.City=E.City
WHERE E.City IS NULL


--List all products and their total order quantities throughout all orders.
SELECT P.ProductID, P.ProductName, SUM(OD.Quantity) AS Total
FROM Products P
LEFT JOIN (
    SELECT ProductID, Quantity
    FROM [Order Details]
) OD ON P.ProductID=OD.ProductID
GROUP BY P.ProductID, P.ProductName

--List all Customer Cities and total products ordered by that city.
SELECT C.City, COUNT(OD.Quantity) AS TotalProductsOrdered
FROM Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID
JOIN [Order Details] OD ON O.OrderID = OD.OrderID
GROUP BY C.City

--List all Customer Cities that have at least two customers.
--Use union
SELECT City FROM Customers
EXCEPT
SELECT City FROM customers
GROUP BY City
HAVING COUNT(*)=1
UNION
SELECT City FROM Customers
GROUP BY City
HAVING COUNT(*)=0

--Use sub-query and no union
SELECT DISTINCT City
FROM Customers
WHERE City IN (
    SELECT City
    FROM Customers
    GROUP BY City
    HAVING COUNT(CustomerID) >= 2
)

--List all Customer Cities that have ordered at least two different kinds of products.
SELECT C.City
FROM Customers C
JOIN Orders O ON C.CustomerID=O.CustomerID
JOIN [Order Details] OD ON O.OrderID=OD.OrderID
GROUP BY C.City
HAVING COUNT(OD.ProductID)>=2


--List all Customers who have ordered products, but have the ‘ship city’ on the order different from their own customer cities.
SELECT DISTINCT C.CustomerID,C.ContactName, C.City, O.ShipCity
FROM Customers C
JOIN Orders O ON C.CustomerID=O.CustomerID
WHERE C.City!=O.ShipCity


--List 5 most popular products, their average price, and the customer city that ordered most quantity of it.
SELECT TOP 5
    OD.ProductID,
    P.ProductName,
    AVG(P.UnitPrice) AS AvgPrice,
    MAX(O.ShipCity) AS MostOrderedCity,
    SUM(OD.Quantity) AS TotalQuantity
FROM
    [Order Details] OD
JOIN
    Products P ON OD.ProductID = P.ProductID
JOIN
    Orders O ON OD.OrderID = O.OrderID
GROUP BY
    OD.ProductID, P.ProductName
ORDER BY
    SUM(OD.Quantity) DESC;

--List all cities that have never ordered something but we have employees there.
--Use sub-query
SELECT City
FROM Employees
WHERE City NOT IN(
    SELECT ShipCity
    FROM Orders
)


--Do not use sub-query
SELECT E.City
FROM Employees E
LEFT JOIN Orders O ON E.City=O.ShipCity
WHERE O.OrderID IS NULL


--List one city, if exists, that is the city from where the employee sold most orders (not the product quantity) is, and also the city of most total quantity of products ordered from.
WITH EmployeeOrders AS (
    SELECT TOP 1 E.City
    FROM Employees E
    JOIN Orders O ON E.EmployeeID=O.EmployeeID
    GROUP BY E.City
    ORDER BY COUNT(*) DESC
),
CityQuantities AS (
    SELECT TOP 1 O.ShipCity
    FROM Orders O
    JOIN [Order Details] OD ON O.OrderID=OD.OrderID
    GROUP BY O.ShipCity
    ORDER BY Sum(OD.Quantity) DESC
)
SELECT
    (SELECT City FROM EmployeeOrders) AS MostOrder,
    (SELECT ShipCity FROM CityQuantities) AS MostQuantity


--How do you remove the duplicates record of a table?
--e.g. For FebBatch, CLASS table, remove duplicate from ClassName column
USE FebBatch
GO

WITH CTE AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY ClassName ORDER BY ID) AS RowNum
    FROM CLASS
)
DELETE FROM CTE
WHERE RowNum > 1;












