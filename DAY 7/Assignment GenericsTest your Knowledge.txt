Test your Knowledge
1. Describe the problem generics address.
Generics address the problem of code reusability and type safety in programming languages. They allow me to create classes, interfaces, and methods that can work with any data type, rather than being tied to a specific type. This enables me to write flexible and reusable code that is type-safe at compile time.


2. How would you create a list of strings, using the generic List class?
List<string> stringList = new List<string>();


3. How many generic type parameters does the Dictionary class have?
Two generic type parameters: one for the type of keys and one for the type of values.


4. True/False. When a generic class has multiple type parameters, they must all match.
FALSE


5. What method is used to add items to a List object?
list.Add(obj);


6. Name two methods that cause items to be removed from a List.
Remove() / RemoveAt()


7. How do you indicate that a class has a generic type parameter?
public class MyClass<T>
{
    // Class members
}


8. True/False. Generic classes can only have one generic type parameter.
FALSE


9. True/False. Generic type constraints limit what can be used for the generic type.
TRUE


10. True/False. Constraints let you use the methods of the thing you are constraining to
TRUE